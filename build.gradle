plugins {
    id('java')
    id('com.gradleup.shadow') version('8.3.5')
    id('net.kyori.blossom') version('1.3.1')
}
def pluginName = "GetLogs"
def pluginAuthor = "Koboo"
group = 'eu.koboo'
version = '1.0.2-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name('spigot-repo')
        url('https://hub.spigotmc.org/nexus/content/groups/public/')
    }
    maven {
        name('sonatype-repo')
        url('https://oss.sonatype.org/content/repositories/snapshots/')
    }
    maven {
        name('papermc-repo')
        url('https://repo.papermc.io/repository/maven-public/')
    }
    maven {
        name('papermc-repo')
        url('https://repo.papermc.io/repository/maven-public/')
    }
    maven {
        name('skydb-repo')
        url('https://repository.skydb.de/repo')
    }
}

dependencies {
    // Plugin dependencies
    implementation('com.google.code.gson:gson:2.10.1')
    implementation('org.slf4j:slf4j-api:2.0.16')

    // Updater dependency
    implementation('de.skydb.updater:Updater-Bukkit:0.0.4-SNAPSHOT')
    implementation('de.skydb.updater:Updater-Bungee:0.0.4-SNAPSHOT')
    implementation('de.skydb.updater:Updater-Velocity:0.0.4-SNAPSHOT')

    // Boilerplate generator
    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")

    // Bukkit / Spigot / Paper / Folia
    compileOnly('org.bukkit:bukkit:1.8-R0.1-SNAPSHOT')

    // Bungeecord / Waterfall
    compileOnly('net.md-5:bungeecord-api:1.8-SNAPSHOT')

    // Velocity
    compileOnly('com.velocitypowered:velocity-api:3.1.1-SNAPSHOT')
    annotationProcessor('com.velocitypowered:velocity-api:3.1.1-SNAPSHOT')
}

shadowJar {
    archiveBaseName.set("getlogs-plugin")
    archiveClassifier.set("")
    relocate('com.google.gson', 'eu.koboo.libs.gson')
    relocate('de.skydb.updater', 'eu.koboo.getlogs.updater')
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    toolchain.languageVersion.set(JavaLanguageVersion.of(8))
}

blossom {
    replaceToken("getlogs_name", pluginName)
    replaceToken("getlogs_version", version.toString())
    replaceToken("getlogs_author", pluginAuthor.toString())
}

processResources {
    filesMatching("**/*.yml") {
        it.expand([
                "getlogs_version": version.toString(),
                "getlogs_name"   : pluginName,
                "getlogs_author" : pluginAuthor
        ])
    }
}
